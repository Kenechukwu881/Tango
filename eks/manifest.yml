---
apiVersion: v1 
kind: Namespace 
metadata: 
  name: game-2048 
--- 
apiVersion: apps/v1 
kind: Deployment
metadata: 
  namespace: game-2048 
  name: deployment-2048 
spec: 
  selector: 
    matchLabels: 
      app.kubernetes.io/name: app-2048 
  replicas: 5 
  template: 
    metadata:
      name: pod-app-2048
      labels: 
        app.kubernetes.io/name: app-2048 
    spec: 
      containers: 
      - image: public.ecr.aws/l6m2t8p7/docker-2048:latest 
        imagePullPolicy: Always 
        name: app-2048 
        ports: 
        - containerPort: 80
        env:
            - name: DB_HOSTNAME
              value: "tangodb"            
            - name: DB_PORT
              value: "3306"                      
            - name: DB_USERNAME
              value: "adminaccount"
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-db-password
                  key: db-password
--- 
apiVersion: v1 
kind: Service 
metadata: 
  namespace: game-2048 
  name: service-2048
  labels:
    app.kubernetes.io/name: app-2048 
spec: 
  ports: 
    - port: 80 
      targetPort: 80
      protocol: TCP 
  type: ClusterIP  ##Updated to secure the communication within the cluster
  selector: 
    app.kubernetes.io/name: app-2048 
--- 
apiVersion: networking.k8s.io/v1 
kind: Ingress 
metadata: 
  namespace: game-2048 
  name: ingress-2048
  annotations: 
    alb.ingress.kubernetes.io/scheme: internet-facing 
    alb.ingress.kubernetes.io/target-type: IP 
    kubernetes.io/ingress.class: alb
    kubernetes.io/ingress.class: nginx
spec:
  rules: 
    - http: 
        paths: 
        - path: /* 
          pathType: Prefix 
          backend: 
            service: 
              name: service-2048 
              port: 
                number: 80 

# Networking tool manifest: 
---
apiVersion: apps/v1 
kind: DaemonSet 
metadata: 
  name: network-multitool 
  namespace: kube-system 
  labels: 
    tier: node 
    app: network-multitool 
spec: 
  selector: 
    matchLabels: 
      tier: node 
      app: network-multitool 
  template: 
    metadata: 
      labels: 
        tier: node 
        app: network-multitool 
    spec: 
      hostNetwork: true 
      tolerations: 
      - operator: Exists 
        effect: NoSchedule 
      containers: 
      - name: network-multitool 
        image: wbitt/network-multitool ##Updated to reflect newer image 
        env: 
        - name: HTTP_PORT 
          value: "1180" 
        - name: HTTPS_PORT 
          value: "11443" 
        ports: 
        - containerPort: 1180 
          name: http-port 
        - containerPort: 11443 
          name: https-port 
        resources: 
          requests: 
            cpu: "1m" 
            memory: "20Mi" 
          limits: 
            cpu: "10m" 
            memory: "20Mi" 
        securityContext: 
          runAsUser: 0 
          capabilities: 
            add: ["NET_ADMIN"] 

